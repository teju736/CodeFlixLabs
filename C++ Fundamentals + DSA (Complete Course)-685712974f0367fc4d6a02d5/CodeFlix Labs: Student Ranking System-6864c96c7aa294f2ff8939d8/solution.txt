[{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\n    int studentID;\n    string name;\n    int problemsSolved;\n\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    void displayRank(int rank){\n        cout<<\"Rank \"<<rank<<\": Student ID: \"<<studentID<<\" Name: \"<<name<<\" Problems Solved: \"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-15T00:04:44.575Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\n    int studentID;\n    string name;\n    int problemsSolved;\n\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    int getProblemsSolved() {\n        return problemsSolved;\n    };\n    void displayRank(int rank){\n        cout<<\"Rank \"<<rank<<\": Student ID: \"<<studentID<<\" Name: \"<<name<<\" Problems Solved: \"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-15T00:06:53.576Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\nint studentID;\nstring name;\nint problemsSolved;\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    void displayRank(int rank){\n        cout<<\"Rank \"<<rank<<\": \"<<\"Student ID: \"<<studentID<<\" \"<<\"Name: \"<<name<<\" Problems Solved:\"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-19T11:52:19.387Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\nint studentID;\nstring name;\nint problemsSolved;\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    void displayRank(int rank){\n        cout<<\"Rank \"<<rank<<\": \"<<\"Student ID: \"<<studentID<<\" \"<<\"Name: \"<<name<<\" Problems Solved:\"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-19T11:53:06.891Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\nint studentID;\nstring name;\nint problemsSolved;\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    void displayRank(int rank)const{\n        cout<<\"Rank \"<<rank<<\": \"<<\"Student ID: \"<<studentID<<\" \"<<\"Name: \"<<name<<\" Problems Solved:\"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-19T11:55:12.541Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass Student {\n    // Declare private data members: studentID, name, problemsSolved\nint studentID;\nstring name;\nint problemsSolved;\npublic:\n    void input(){\n        cin>>studentID>>name>>problemsSolved;\n    };\n    int getProblemsSolved() const {\n        return problemsSolved;\n    }\n    void displayRank(int rank)const{\n        cout<<\"Rank \"<<rank<<\": \"<<\"Student ID: \"<<studentID<<\" \"<<\"Name: \"<<name<<\" Problems Solved:\"<<problemsSolved<<endl;\n    };\n};\n","language":"cpp","time":"2025-08-19T11:55:43.805Z","isCorrect":false},{"code":"#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nclass Student {\n    int studentID;\n    string name;\n    int problemsSolved;\n    int computedRank;  // store computed rank\n\npublic:\n    void input() {\n        cin >> studentID >> name >> problemsSolved;\n        computedRank = 0;  // initialize\n    }\n\n    int getProblemsSolved() const {\n        return problemsSolved;\n    }\n\n    void setRank(int rank) {\n        computedRank = rank;\n    }\n\n    // Ignore parameter rank, print computedRank instead\n    void displayRank(int /*rank*/) const {\n        cout << \"Rank \" << computedRank << \": \"\n             << \"Student ID: \" << studentID << \" \"\n             << \"Name: \" << name << \" \"\n             << \"Problems Solved: \" << problemsSolved << endl;\n    }\n\n    // Friend function to assign ranks and sort\n    friend void assignRanks(Student arr[], int n);\n};\n","language":"cpp","time":"2025-08-19T11:57:04.263Z","isCorrect":false}]