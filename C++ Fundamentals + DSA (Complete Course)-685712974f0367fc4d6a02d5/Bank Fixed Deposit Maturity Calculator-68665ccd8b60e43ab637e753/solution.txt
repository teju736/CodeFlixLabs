[{"code":"#include<iostream>\nusing namespace std;\nclass FixedDeposit {\n    float principal, rate, time;\n\npublic:\n    FixedDeposit(float p, float r, float t){\n        principal=p;\n        rate=r;\n        time=t;\n    }; // Parameterized constructor\n    float calculateMaturity(){\n        return (principal*rate)/time;\n    };\n};\n","language":"cpp","time":"2025-08-19T12:01:59.278Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass FixedDeposit {\n    float principal, rate, time;\n\npublic:\n    FixedDeposit(float p, float r, float t){\n        principal=p;\n        rate=r;\n        time=t;\n    }; // Parameterized constructor\n    float calculateMaturity(){\n        return (principal*rate*time)/100;\n    };\n};\n","language":"cpp","time":"2025-08-19T12:02:27.246Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass FixedDeposit {\n    float principal, rate, time;\n\npublic:\n    FixedDeposit(float p, float r, float t){\n        principal=p;\n        rate=r;\n        time=t;\n    }; // Parameterized constructor\n    float calculateMaturity(){\n        return (principal*rate*time);\n    };\n};\n","language":"cpp","time":"2025-08-19T12:02:48.650Z","isCorrect":false},{"code":"#include<iostream>\nusing namespace std;\nclass FixedDeposit {\n    float principal, rate, time;\n\npublic:\n    FixedDeposit(float p, float r, float t){\n        principal=p;\n        rate=r;\n        time=t;\n    }; // Parameterized constructor\n    float calculateMaturity(){\n        return ((principal*rate*time)/100)+principal;\n    };\n};\n","language":"cpp","time":"2025-08-19T12:03:58.577Z","isCorrect":true}]